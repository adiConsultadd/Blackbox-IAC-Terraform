# ----------------------------------------------------------------
# EXAMPLE ENVIRONMENT CONFIGURATION
#
# INSTRUCTIONS:
# 1. Copy this file to 'dev.tfvars' or 'prod.tfvars'.
# 2. Fill in the values for your target environment.
# 3. Use the command: terraform apply -var-file="your_file.tfvars"
# ----------------------------------------------------------------

# ---------- Global ----------
# aws_region   = "us-east-1"
# environment  = "dev"
# project_name = "blackbox"

# ---------- Networking ----------------
# NOTE: Use a unique CIDR range for each environment (e.g., dev, prod)
# to ensure the VPCs do not have overlapping IP address spaces.
# vpc_cidr             = "10.0.0.0/16"
# public_subnet_cidrs  = ["10.0.1.0/24", "10.0.2.0/24"]
# private_subnet_cidrs = ["10.0.101.0/24", "10.0.102.0/24"]
# availability_zones   = ["us-east-1a", "us-east-1b"]

# ---------- EC2 Instance --------------
# Find the latest Amazon Linux 2 AMI for your region
# ec2_ami_id        = "ami-0c55b159cbfafe1f0" # Example for us-east-1
# ec2_instance_type = "t3.micro"
# ec2_key_name      = "your-key-pair-name"
# ssh_access_cidr   = "YOUR_IP_ADDRESS/32" # IMPORTANT: Restrict this to your IP for security

# ---------- RDS Database --------------
# WARNING: Do not commit real passwords to Git.
# Use a secure method like AWS Secrets Manager for production credentials.
# db_engine            = "postgres"
# db_instance_class    = "db.t3.micro" # Consider a larger instance for production
# db_allocated_storage = 10
# db_username          = "admin"
# db_password          = "YourPasswordHere"
# skip_final_snapshot  = true # Should be 'false' for production environments

# ---------- ElastiCache Redis ---------
# Recommended to use a 'cache.t3.micro' or larger for production.
# elasticache_node_type       = "cache.t2.micro"
# elasticache_num_nodes     = 1
# elasticache_engine_version  = "7.0"

# ---------- CloudFront ----------------
# For production, 'PriceClass_All' is recommended for the best performance.
# cloudfront_price_class = "PriceClass_100" # e.g., PriceClass_100, PriceClass_200, PriceClass_All
# viewer_protocol_policy = "redirect-to-https"
# default_root_object    = "index.html"
# cloudfront_enabled     = true

# ---------- EventBridge ---------------
# A cron expression for the scheduled Lambda trigger.
# eventbridge_schedule_expression = "cron(0 2 * * ? *)" # e.g., Every day at 2:00 AM UTC

# ---------- SSM Parameter Store -------
# Use a secure method like AWS Secrets Manager or environment variables for production credentials.
# ssm_parameters = {
#   "api_key" = {
#     type  = "SecureString"
#     value = "your-secret-api-key-here"
#   },
#   "rds_master_password" = {
#     type  = "SecureString"
#     value = "another-super-secret-value"
#   }
# }

# ---------- Lambda Layers ---------------
# lambda_layers = {
#   "layer1" = {
#     source_path         = "layers/layer1"
#     compatible_runtimes = ["python3.9"]
#   },
#   "layer2" = {
#     source_path         = "layers/layer2"
#     compatible_runtimes = ["python3.9"]
#   },
#   "layer3" = {
#     source_path         = "layers/layer3"
#     compatible_runtimes = ["python3.9"]
#   },
#   "layer4" = {
#     source_path         = "layers/layer4"
#     compatible_runtimes = ["python3.9"]
#   }
# }