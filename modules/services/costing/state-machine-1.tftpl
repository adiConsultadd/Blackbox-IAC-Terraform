{
  "Comment": "Run infra, license, and wages branches in parallel with error handling.",
  "StartAt": "AllCostBranches",
  "States": {
    "AllCostBranches": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "CostInfrastructure",
          "States": {
            "CostInfrastructure": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${rfp_infrastructure_lambda_arn}",
                "Payload.$": "$$.Execution.Input"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0,
                  "BackoffRate": 1
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "CostLicense",
          "States": {
            "CostLicense": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${rfp_license_lambda_arn}",
                "Payload.$": "$$.Execution.Input"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0,
                  "BackoffRate": 1
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "HourlyWageDetails",
          "States": {
            "HourlyWageDetails": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${hourly_wages_lambda_arn}",
                "Payload.$": "$$.Execution.Input"
              },
              "ResultPath": "$.HourlyWageDetailsResult",
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0,
                  "BackoffRate": 1
                }
              ],
              "Next": "HourlyWagesResult"
            },
            "HourlyWagesResult": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "Parameters": {
                "FunctionName": "${hourly_wages_result_lambda_arn}",
                "Payload.$": "States.JsonMerge($$.Execution.Input, $.HourlyWageDetailsResult, false)"
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 0,
                  "BackoffRate": 1
                }
              ],
              "End": true
            }
          }
        }
      ],
      "Next": "CostCompleted",
      "Catch": [
        {
          "ErrorEquals": ["States.ALL"],
          "Comment": "Catch any error from the parallel branches",
          "Next": "ExecutionFailed"
        }
      ]
    },
    "CostCompleted": {
      "Type": "Succeed"
    },
    "ExecutionFailed": {
      "Type": "Fail",
      "Error": "ExecutionFailedError",
      "Cause": "One of the parallel cost branches failed. Check the logs for details."
    }
  }
}